<?xml version="1.0" encoding="utf-8"?>
<flow name="RecipeFlow" package="iristk.app.kitchenMaid" 

	initial="goAhead"	
	xmlns="iristk.flow" 
	xmlns:p="iristk.flow.param"
	 
	xmlns:dialog="iristk.flow.DialogFlow" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="iristk.flow flow.xsd iristk.flow.DialogFlow DialogFlow.xsd">
	
	<param name="instructions" type="InstructionSet"/>
	<param name="animation" type="AnimateMe"/>
	
	<var name="instruction" type="Instruction"/>
	<var name="measure" type="Measurement"/>


	<state id="goAhead">
		<onentry>
			<dialog:listen/>
		</onentry>
		<onevent name="sense.user.speak"> 
			<if cond="event?:sem:wakeUp">
				<goto state="Start"/>
			<else/>
				<goto state="goAhead"/>
			</if>
		</onevent>
	</state>

	<state id="Start" extends="Dialog">
		<onentry>
		    <exec>animation.setVisible(true);</exec>
			<dialog:say>Hello. All right. Do you have everything you need?</dialog:say>

			<exec>animation.setListen();</exec>
			<dialog:listen/>
		</onentry>
		<onevent name="sense.user.speak" cond="event?:sem:yes and !event?:sem:no">
			<exec>animation.setTalk();</exec>
			<dialog:say>Cool. Lets get this party started</dialog:say>
			<goto state="MoveOn"/>				
		</onevent>
		<onevent name="sense.user.speak" cond="event?:sem:no">
			<goto state="End"/>	
		</onevent>
	</state>
	
	<state id="MoveOn" extends="Dialog">
		<onentry>
			<if cond="instructions.endOfRecipe()">
				<exec>animation.setTalk();</exec>
				<dialog:say>You are finished with the recipe. Good job.</dialog:say>
				<goto state="End"/>
			<else/>
				<exec>instruction = instructions.next();</exec>
				<goto state="readInstruction"/>
			</if>
		</onentry>
	</state>
	
	<state id="readInstruction">
			<onentry>
			<exec>animation.setTalk();</exec>			
			<dialog:say text="instruction.getFullInstruction()"/>
				<if cond="instruction.getTimer()">
					<goto state="startTimer"/>
				</if>
			<goto state="Recipe"/>
		</onentry>
	</state>
	
	<state id="Recipe" extends="Dialog">
		<onentry>
			<exec>animation.setListen();</exec>
			<dialog:listen/>
		</onentry>

		<onevent name="sense.user.speak" cond="event?:sem:yes and !event?:sem:no and !event?:sem:ready">
			<goto state="Wait"/>
		</onevent>
		<onevent name="sense.user.speak" cond="event?:sem:repeat">
			<exec>animation.setTalk();</exec>
			<dialog:say>Okey, let me repeat</dialog:say>
			<goto state="readInstruction"/>
		</onevent>
		<onevent name="sense.user.speak" cond="event?:sem:question">
			<if cond="event:sem:question == 'measurement'">
				<goto state="Measurement"/>
			<elseif cond="event:sem:question == 'ingredient'"/>
				<goto state="Ingredient"/>
			<else/>
				<dialog:say>Oh no</dialog:say>
			</if>
		</onevent>
		<onevent name="sense.user.speak" cond="event?:sem:ready and !event?:sem:no">
			<goto state="MoveOn"/>
		</onevent>
	</state>
	
	<state id="startTimer" extends="Dialog">
		<onentry>
			<dialog:prompt>I will help you track the time. Let me know when to set the timer</dialog:prompt>
		</onentry>
		<onevent name="sense.user.speak" cond="event?:sem:start">
			<goto state="Timer"></goto>
		</onevent>
		<onevent name="sense.user.speak" cond="event?:sem:no">
			<dialog:say>You need to set a timer for this part. </dialog:say>
			<goto state="startTimer"/>
		</onevent>
	</state>

	<state id="Timer" extends="Dialog">
		<onentry>
				<dialog:say>Setting timer for</dialog:say>
				<dialog:say text="instruction.getAmount()"/>
				<dialog:say text="instruction.getMeasurement()"/>
				<exec>animation.setTimer(instruction.getAmount());</exec>
				<goto state="timerReady"/>
		</onentry> 
	</state>
	
	<state id="timerReady">
		<onentry>
			<dialog:listen/>
			<if cond="animation.timerReady()">
				<dialog:say>Times up!!! Lets move on</dialog:say>
				<goto state="MoveOn"/>
			<else/>
				<goto state="timerReady"/>
			</if>
		</onentry>
		<onevent name="sense.user.speak" cond="event?:sem:timer">
			<dialog:say>It's</dialog:say>
			<dialog:say text="animation.returnSeconds()"/>
			<dialog:say>seconds left</dialog:say>
		</onevent>
	</state>
	
	<state id="Wait" extends="Dialog">
	<onentry>
		<exec>animation.setTalk();</exec>	
		<dialog:say>Let me know when you are done with this step</dialog:say>
		<exec>animation.setListen();</exec>
		<dialog:listen/>
	</onentry>	
	<onevent name="sense.user.speak" cond="event?:sem:no">
		<exec>animation.setTalk();</exec>
		<dialog:say>Ok</dialog:say>
		<goto state="Wait"/>
	</onevent>
	<onevent name="sense.user.speak" cond="event?:sem:ready and !event?:sem:no">
		<exec>animation.setTalk();</exec>
		<random>
			<dialog:say>Good, lets move on</dialog:say>
			<dialog:say>Awesome, time for the next step</dialog:say>
			<dialog:say>Whoop whoop moving on</dialog:say>
		</random>
		<goto state="MoveOn"/>
	</onevent>
	</state>
	
	<state id="Dialog">
		<onevent name="sense.user.silence">
			<exec>animation.setTalk();</exec>
			<dialog:say>How is it going</dialog:say>
			<reentry/>
		</onevent>
		<onevent name="sense.user.speak">
			<if cond="event?:sem:soGood">
				<dialog:say>I'm glad you like it. The recipe is from my mom.</dialog:say>
				<reentry/>
			<else/>
				<exec>animation.setTalk();</exec>
				<dialog:say>I am sorry, I didn't get that.</dialog:say>
				<reentry/>
			</if>
		</onevent>
	</state>	
	
	<state id="Measurement" extends="Dialog">
		<onentry>
			<exec>animation.setTalk();</exec>		
			<dialog:say>Let me repeat the amount</dialog:say>
			<dialog:say text="instruction.getMeasurement()"/>
			<goto state="Recipe"/>
		</onentry>
	</state>		

	<state id="Ingredient" extends="Dialog">
		<onentry>
			<exec>animation.setTalk();</exec>
			<dialog:say>Let me repeat the ingredient</dialog:say>
			<dialog:say text="instruction.getIngredient()"/>
			<goto state="Recipe"/>
		</onentry>
	</state>	
	
	<state id="End">
		<onentry>
		<exec>animation.setTalk();</exec>
		<dialog:say>Okay, goodbye</dialog:say>
		<exec>System.exit(0)</exec>
		</onentry>
	</state>

</flow>