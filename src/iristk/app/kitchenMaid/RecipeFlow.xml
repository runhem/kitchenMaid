<?xml version="1.0" encoding="utf-8"?>
<flow name="RecipeFlow" package="iristk.app.kitchenMaid" 
	initial="Greeting"	
	xmlns="iristk.flow" 
	xmlns:p="iristk.flow.param"
	 
	xmlns:dialog="iristk.flow.DialogFlow" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="iristk.flow flow.xsd iristk.flow.DialogFlow DialogFlow.xsd">
	<param name="instructions" type="InstructionSet"/>
	
	<var name="instruction" type="Instruction"/>
	<var name="measure" type="Measurement"/>
	
	<state id="Greeting">
	<onentry>
	<dialog:say>Hi! I'm kitchenMaid <!--, your own personal baking assistant. I'm in the mood for baking today. Lets make som raspberry muffins.--></dialog:say>
	<goto state="Start"/>
	</onentry>
	</state>

	<state id="Start">
		<onentry>
			<dialog:say>Are you ready to start?</dialog:say>
			<dialog:listen/>
		</onentry>
		<onevent name="sense.user.speak" cond="event?:sem:confirm">
			<dialog:say>Cool. Lets get this party started. <!-- I will now read you the instructions for the recipe. --> </dialog:say>
			<goto state="MoveOn"/>				
		</onevent>
		<onevent name="sense.user.speak" cond="event?:sem:no">
			<goto state="End"/>	
		</onevent>
	</state>
	
	<state id="MoveOn">
		<onentry>
			<if cond="instructions.endOfRecipe()">
				<dialog:say>You are finished with the recipe. Good job.</dialog:say>
				<goto state="End"/>
			<else/>
				<exec>instruction = instructions.next();</exec>
				<goto state="Recipe"/>
			</if>
		</onentry>
	</state>
	
	<state id="Recipe" extends="Wait">
		<onentry>
			<dialog:say text="instruction.getFullInstruction()"/>
				<if cond="instruction.getTimer()">
					<goto state="startTimer"/>
				</if>
			<goto state="Wait"/>
		</onentry>
	</state>
	
	<state id="startTimer">
		<onentry>
			<dialog:prompt>I will help you track the time. Let me know when to start the timer</dialog:prompt>
		</onentry>
		<onevent name="sense.user.speak" cond="event?:sem:set">
			<goto state="Timer"></goto>
		</onevent>
		<onevent name="sense.user.speak" cond="event?:sem:no">
			<dialog:say>You need to set a timer for this part. </dialog:say>
			<goto state="startTimer"/>
		</onevent>
	</state>

	<state id="Timer">
		<onentry>
				<dialog:say>Setting timer for</dialog:say>
				<dialog:say text="instruction.getAmount()"/>
				<dialog:say text="instruction.getMeasurement()"/>
				<exec>instruction.setTimer();</exec>
				<goto state="timerReady"/>
		</onentry>
	</state>
	
	<state id="timerReady">
		<onentry>
			<dialog:listen/>
			<if cond="instruction.isTimerReady()">
				<dialog:say>Times up!!! Lets move on</dialog:say>
				<goto state="MoveOn"/>
			<else/>
				<goto state="timerReady"/>
			</if>
		</onentry>
		<onevent name="sense.user.speak" cond="event?:sem:no">
			<dialog:say>It's</dialog:say>
			<dialog:say text="instruction.getSeconds()"/>
			<dialog:say>seconds left</dialog:say>
		</onevent>
	</state>
	
	<state id="Wait">
		<onentry>
			<dialog:say>Let me know when you are done with this step</dialog:say>		
			<dialog:listen/>
		</onentry>
		<onevent name="sense.user.speak">
			<if cond="event?:sem:ready">
				<random>
					<dialog:say>Good, lets move on</dialog:say>
					<dialog:say>Awesome, time for the next step</dialog:say>
					<dialog:say>Whoop whoop moving on</dialog:say>
				</random>
				<goto state="MoveOn"/>	
			<elseif cond="event?:sem:repeat"/>
				<dialog:say>Okey, let me repeat the instruction</dialog:say>
				<goto state="Recipe"/>
			<elseif cond="event?:sem:question"/>
				<if cond="event:sem:question == 'measurement'">
					<goto state="Measurement"/>
				<elseif cond="event:sem:question == 'ingredient'"/>
					<goto state="Ingredient"/>
				<elseif cond="event:sem:question == 'amount'"/>
					<goto state="Amount"/>
				<else/>
					<dialog:say>Oh no</dialog:say>
				</if>
			<else/>
				<goto state="Wait"/>
			</if>
		</onevent>
	</state>	
	
	<state id="Measurement">
		<onentry>
			<dialog:say>Okey, let me repeat the measurement</dialog:say>
			<dialog:say text="instruction.getMeasurement()"/>
			<goto state="Wait"/>
		</onentry>
	</state>
	
	<state id="Amount">
		<onentry>
			<dialog:say>Okey, let me repeat the amount</dialog:say>
			<dialog:say text="instruction.getAmount()"/>
			<goto state="Wait"/>
		</onentry>
	</state>		

	<state id="Ingredient">
		<onentry>
			<dialog:say>Okey, let me repeat the ingredient</dialog:say>
			<dialog:say text="instruction.getIngredient()"/>
			<goto state="Wait"/>
		</onentry>
	</state>	
	
	<state id="End">
		<onentry>
		<dialog:say>Okay, goodbye</dialog:say>
		<exec>System.exit(0)</exec>
		</onentry>
	</state>

</flow>