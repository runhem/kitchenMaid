<?xml version="1.0" encoding="utf-8"?>
<flow name="RecipeFlow" package="iristk.app.kitchenMaid" 
	initial="Start"	
	xmlns="iristk.flow" 
	xmlns:p="iristk.flow.param"
	 
	xmlns:dialog="iristk.flow.DialogFlow" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="iristk.flow flow.xsd iristk.flow.DialogFlow DialogFlow.xsd">
	<param name="instructions" type="InstructionSet"/>
	
	<var name="instruction" type="Instruction"/>
	<var name="measure" type="Measurement"/>
	

	<state id="Start" extends="Dialog">
		<onentry>
			<dialog:say>Time to do some cool baking. Are you ready?</dialog:say>
			<dialog:listen/>
		</onentry>
		<onevent name="sense.user.speak" cond="event?:sem:confirm">
			<dialog:say>Cool. Lets get this party started</dialog:say>
			<goto state="MoveOn"/>				
		</onevent>
		<onevent name="sense.user.speak" cond="event?:sem:no">
			<goto state="End"/>	
		</onevent>
	</state>
	
	<state id="MoveOn" extends="Dialog">
		<onentry>
			<if cond="instructions.endOfRecipe()">
				<dialog:say>You are finished with the recipe. Good job.</dialog:say>
				<goto state="End"/>
			<else/>
				<exec>instruction = instructions.next();</exec>
				<goto state="Recipe"/>
			</if>
		</onentry>
	</state>
	
	<state id="Recipe" extends="Dialog">
		<onentry>
			<dialog:say text="instruction.getFullInstruction()"/>
			<dialog:listen/>
		</onentry>
		<onevent name="sense.user.speak" cond="event?:sem:confirm">
			<goto state="Wait"/>
		</onevent>
		<onevent name="sense.user.speak" cond="event?:sem:no">
			<dialog:say>Okey, let me repeat</dialog:say>
			<dialog:say>Now I'm reading the same step again</dialog:say>
			<goto state="Recipe"/>
		</onevent>
	</state>

	
	<state id="Wait" extends="Dialog">
	<onentry>
		<dialog:say>Let me know when you are ready</dialog:say>
		<dialog:listen/>
	</onentry>
	<onevent name="sense.user.speak" cond="event?:sem:ready">
		<random>
			<dialog:say>Good, lets move on</dialog:say>
			<dialog:say>Awesome, time for the next step</dialog:say>
			<dialog:say>Whoop whoop moving on</dialog:say>
		</random>
		<goto state="MoveOn"/>
	</onevent>
	</state>
	
	<state id="Dialog">
		<onevent name="sense.user.speak" cond="event?:sem:question">
			<if cond="event:sem:question == 'measurement'">
				<goto state="Measurement"/>
			<elseif cond="event:sem:question == 'ingredient'"/>
				<goto state="Ingredient"/>
			<else/>
				<dialog:say>Oh no</dialog:say>
			</if>
		</onevent>
		<onevent name="sense.user.silence">
			<dialog:say>How is it going</dialog:say>
			<reentry/>
		</onevent>
		<onevent name="sense.user.speak">
			<dialog:say>I am sorry, I didn't get that.</dialog:say>
			<reentry/>
		</onevent>
	</state>	
	
	<state id="Measurement" extends="Dialog">
		<onentry>
			<dialog:say>Okey, let me repeat the amount</dialog:say>
			<dialog:say text="instruction.getMeasurement()"/>
			<goto state="Wait"/>
		</onentry>
	</state>		

	<state id="Ingredient" extends="Dialog">
		<onentry>
			<dialog:say>Okey, let me repeat the ingredient</dialog:say>
			<dialog:say text="instruction.getIngredient()"/>
			<goto state="Wait"/>
		</onentry>
	</state>	
	
	<state id="End">
		<onentry>
		<dialog:say>Okay, goodbye</dialog:say>
		<exec>System.exit(0)</exec>
		</onentry>
	</state>

</flow>